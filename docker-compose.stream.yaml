version: "3"

services:
  postgres:
    container_name: postgres
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./initdb:/docker-entrypoint-initdb.d"
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    restart: always

  producer-agent-1:
    container_name: producer-agent-1
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/postgres
      - REDIS_HOST=redis
    depends_on:
      - postgres
    command: ["python", "worker.py", "stream_producer"]
    volumes:
      - ./worker.cf.stream.yaml:/app/worker.yaml
    restart: always

  producer-agent-2:
    container_name: producer-agent-2
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/postgres
      - REDIS_HOST=redis
    depends_on:
      - postgres
    command: ["python", "worker.py", "stream_producer"]
    volumes:
      - ./worker.cf.stream.yaml:/app/worker.yaml
    restart: always

  consumer-agent:
    container_name: consumer-agent
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/postgres
      - REDIS_HOST=redis
      - REDIS_CONSUMER=consumer-agent
    depends_on:
      - postgres
    command: ["python", "worker.py", "stream_consumer"]
    volumes:
      - ./worker.cf.stream.yaml:/app/worker.yaml
    restart: always
